<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentHttp</name>
    </assembly>
    <members>
        <member name="T:FluentHttp.HttpWebRequestWrapper">
            <summary>
            Represents the http web request wrapper.
            </summary>
        </member>
        <member name="T:FluentHttp.IHttpWebRequest">
            <summary>
            Represents the http web request.
            </summary>
        </member>
        <member name="M:FluentHttp.IHttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
            <summary>
            Begins the get response.
            </summary>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
            <returns>
            The async result.
            </returns>
        </member>
        <member name="M:FluentHttp.IHttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
            <summary>
            Beggins getting the request stream.
            </summary>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
            <returns>
            The async result.
            </returns>
        </member>
        <member name="M:FluentHttp.IHttpWebRequest.EndGetResponse(System.IAsyncResult)">
            <summary>
            Ends the http web get response.
            </summary>
            <param name="asyncResult">
            The async result.
            </param>
            <returns>
            The http web response.
            </returns>
        </member>
        <member name="M:FluentHttp.IHttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
            <summary>
            Ends the get request stream.
            </summary>
            <param name="asyncResult">
            The async result.
            </param>
            <returns>
            The request stream.
            </returns>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Method">
            <summary>
            Gets or sets the http method.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Headers">
            <summary>
            Gets or sets the http headers.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.ContentLength">
            <summary>
            Gets or sets the content length.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.CookieContainer">
            <summary>
            Gets or sets the cookie container.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Credentials">
            <summary>
            Gets or sets the credentials.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.RequestUri">
            <summary>
            Gets the request uri.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Accept">
            <summary>
            Gets or sets the accept.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Proxy">
            <summary>
            Gets or sets the proxy.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.IfModifiedSince">
            <summary>
            Gets or sets the if modified since.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Referer">
            <summary>
            Gets or sets the referer.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.TransferEncoding">
            <summary>
            Gets or sets the transfer encoding.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.AutomaticDecompression">
            <summary>
            Gets or sets the decompression method.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Expect">
            <summary>
            Gets or sets the expect.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebRequest.Connection">
            <summary>
            Gets or sets the connection.
            </summary>
        </member>
        <member name="F:FluentHttp.HttpWebRequestWrapper._httpWebRequest">
            <summary>
            The http web request.
            </summary>
        </member>
        <member name="M:FluentHttp.HttpWebRequestWrapper.#ctor(System.Net.HttpWebRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.HttpWebRequestWrapper"/> class.
            </summary>
            <param name="httpWebRequest">
            The http web request.
            </param>
        </member>
        <member name="M:FluentHttp.HttpWebRequestWrapper.BeginGetResponse(System.AsyncCallback,System.Object)">
            <summary>
            Begins the get response.
            </summary>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
            <returns>
            The async result.
            </returns>
        </member>
        <member name="M:FluentHttp.HttpWebRequestWrapper.BeginGetRequestStream(System.AsyncCallback,System.Object)">
            <summary>
            Beggins getting the request stream.
            </summary>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
            <returns>
            The async result.
            </returns>
        </member>
        <member name="M:FluentHttp.HttpWebRequestWrapper.EndGetResponse(System.IAsyncResult)">
            <summary>
            Ends the http web get response.
            </summary>
            <param name="asyncResult">
            The async result.
            </param>
            <returns>
            The http web response.
            </returns>
        </member>
        <member name="M:FluentHttp.HttpWebRequestWrapper.EndGetRequestStream(System.IAsyncResult)">
            <summary>
            Ends the get request stream.
            </summary>
            <param name="asyncResult">
            The async result.
            </param>
            <returns>
            The request stream.
            </returns>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Method">
            <summary>
            Gets or sets the http method.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Headers">
            <summary>
            Gets or sets the http headers.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.ContentLength">
            <summary>
            Gets or sets the content length.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.CookieContainer">
            <summary>
            Gets or sets the cookie container.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Credentials">
            <summary>
            Gets or sets the credentials.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.RequestUri">
            <summary>
            Gets the request uri.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Accept">
            <summary>
            Gets or sets the accept.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Proxy">
            <summary>
            Gets or sets the proxy.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.IfModifiedSince">
            <summary>
            Gets or sets the if modified since.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Referer">
            <summary>
            Gets or sets the referer.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.TransferEncoding">
            <summary>
            Gets or sets the transfer encoding.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.AutomaticDecompression">
            <summary>
            Gets or sets the decompression method.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Expect">
            <summary>
            Gets or sets the expect.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebRequestWrapper.Connection">
            <summary>
            Gets or sets the connection.
            </summary>
        </member>
        <member name="T:FluentHttp.HttpWebResponseWrapper">
            <summary>
            Represents the http web response wrapper.
            </summary>
        </member>
        <member name="T:FluentHttp.IHttpWebResponse">
            <summary>
            Represents the http web response.
            </summary>
        </member>
        <member name="M:FluentHttp.IHttpWebResponse.GetResponseStream">
            <summary>
            Gets the response stream.
            </summary>
            <returns>
            The response stream.
            </returns>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.Method">
            <summary>
            Gets the http method.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.ContentLength">
            <summary>
            Gets the content length.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.ContentType">
            <summary>
            Gets the content type.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.ResponseUri">
            <summary>
            Gets the response uri.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.StatusCode">
            <summary>
            Gets the http status code.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.StatusDescription">
            <summary>
            Gets the status description.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.IsMutuallyAuthenticated">
            <summary>
            Gets a value indicating whether reponse is mutually authenticated.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.Cookies">
            <summary>
            Gets the http cookies.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.Headers">
            <summary>
            Gets the http headers.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.Server">
            <summary>
            Gets the server.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.ProtocolVersion">
            <summary>
            Gets the protocol version.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.ContentEncoding">
            <summary>
            Gets the content encoding.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.LastModified">
            <summary>
            Gets the last modified date and time.
            </summary>
        </member>
        <member name="P:FluentHttp.IHttpWebResponse.CharacterSet">
            <summary>
            Gets the character set.
            </summary>
        </member>
        <member name="F:FluentHttp.HttpWebResponseWrapper.httpWebResponse">
            <summary>
            The http web response.
            </summary>
        </member>
        <member name="M:FluentHttp.HttpWebResponseWrapper.#ctor(System.Net.HttpWebResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.HttpWebResponseWrapper"/> class.
            </summary>
            <param name="httpWebResponse">
            The http web response.
            </param>
        </member>
        <member name="M:FluentHttp.HttpWebResponseWrapper.GetResponseStream">
            <summary>
            Gets the response stream.
            </summary>
            <returns>
            The response stream.
            </returns>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.Method">
            <summary>
            Gets the http method.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.ContentLength">
            <summary>
            Gets the content length.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.ContentType">
            <summary>
            Gets the content type.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.ResponseUri">
            <summary>
            Gets the response uri.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.StatusCode">
            <summary>
            Gets the http status code.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.StatusDescription">
            <summary>
            Gets the status description.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.IsMutuallyAuthenticated">
            <summary>
            Gets a value indicating whether reponse is mutually authenticated.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.Cookies">
            <summary>
            Gets the http cookies.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.Headers">
            <summary>
            Gets the http headers.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.Server">
            <summary>
            Gets the server.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.ProtocolVersion">
            <summary>
            Gets the protocol version.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.ContentEncoding">
            <summary>
            Gets the content encoding.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.LastModified">
            <summary>
            Gets the last modified date and time.
            </summary>
        </member>
        <member name="P:FluentHttp.HttpWebResponseWrapper.CharacterSet">
            <summary>
            Gets the character set.
            </summary>
        </member>
        <member name="T:FluentHttp.Pair`2">
            <summary>
            Represents a pair.
            </summary>
        </member>
        <member name="M:FluentHttp.Pair`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.Pair`2"/> class.
            </summary>
        </member>
        <member name="M:FluentHttp.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.Pair`2"/> class.
            </summary>
            <param name="name">
            The pair name.
            </param>
            <param name="value">
            The pair value.
            </param>
        </member>
        <member name="P:FluentHttp.Pair`2.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:FluentHttp.Pair`2.Value">
            <summary>
            Gets or sets Value.
            </summary>
        </member>
        <member name="M:FluentHttp.WebExceptionWrapper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.WebExceptionWrapper"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:FluentHttp.FluentHttpAsyncResult">
            <summary>
            Represents the fluent http async result.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpAsyncResult.#ctor(FluentHttp.FluentHttpRequest,FluentHttp.FluentHttpResponse,System.Object,System.Threading.WaitHandle,System.Boolean,System.Boolean,System.Boolean,System.Exception,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentHttpAsyncResult"/> class.
            </summary>
            <param name="request">The <see cref="T:FluentHttp.FluentHttpRequest"/>.</param>
            <param name="response">The <see cref="T:FluentHttp.FluentHttpResponse"/>.</param>
            <param name="asyncState">The async state.</param>
            <param name="asyncWaitHandle">The async wait handle.</param>
            <param name="completedSynchronously">Indicates whether the async operation completed synchronously.</param>
            <param name="isCompleted">Indicates whether the async operation completed.</param>
            <param name="isCancelled">Indicates whether the async operation was cancelled.</param>
            <param name="exception">The exception during the http web request.</param>
            <param name="innerException">The inner exception during the http web request.</param>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.InnerException">
            <summary>
            Gets the inner exception.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.Response">
            <summary>
            Gets the <see cref="T:FluentHttp.FluentHttpResponse"/>.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.Request">
            <summary>
            Gets the <see cref="T:FluentHttp.FluentHttpRequest"/>.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.IsCancelled">
            <summary>
            Indicates whether the request was cancelled.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.IsCompleted">
            <summary>
            Indicates whether the async operation is completed.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.AsyncWaitHandle">
            <summary>
            Gets the async wait handle.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.AsyncState">
            <summary>
            Gets the async state.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpAsyncResult.CompletedSynchronously">
            <summary>
            Indicates whether the async operation completed synchronously.
            </summary>
        </member>
        <member name="T:FluentHttp.FluentHttpHeader">
            <summary>
            Represents the Http Header for Fluent Http
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpHeader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentHttpHeader"/> class.
            </summary>
            <param name="name">
            The header name.
            </param>
            <param name="value">
            The header value.
            </param>
        </member>
        <member name="T:FluentHttp.FluentHttpHeaders">
            <summary>
            Collection of http headers.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpHeaders._httpHeaders">
            <summary>
            Internal header collection.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpHeaders.Add(FluentHttp.FluentHttpHeader)">
            <summary>
            Adds the specified <see cref="T:FluentHttp.FluentHttpHeader"/>.
            </summary>
            <param name="httpHeader">
            The http header.
            </param>
            <returns>
            The fluent http headers.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpHeaders.Add(System.String,System.String)">
            <summary>
            Adds the http header with the specified name and value.
            </summary>
            <param name="name">
            The http header name.
            </param>
            <param name="value">
            The http header value.
            </param>
            <returns>
            The fluent http headers.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpHeaders.GetHeaderCollection">
            <summary>
            Gets the internal header collection.
            </summary>
            <returns>
            The list of http header.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpHeaders.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:FluentHttp.FluentHttpHeaders.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="T:FluentHttp.FluentHttpRequest">
            <summary>
            Represents a Fluent Http Request.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._baseUrl">
            <summary>
            The base url.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._resourcePath">
            <summary>
            The resource path.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._httpMethod">
            <summary>
            The http method.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._httpWebRequestFactory">
            <summary>
            The http web request factory.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._headers">
            <summary>
            The fluent http headers.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._queryStrings">
            <summary>
            The fluent query strings.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._body">
            <summary>
            The fluent http request body.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._authenticator">
            <summary>
            The fluent authenticator.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._proxy">
            <summary>
            The proxy.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequest._credentials">
            <summary>
            The credentials
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentHttpRequest"/> class.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.AddStartingSlashInNotPresent(System.String)">
            <summary>
            Adds a forward slash if not present.
            </summary>
            <param name="input">
            The input.
            </param>
            <returns>
            Returns a string starting with /.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.UrlDecode(System.String)">
            <summary>
            Url decode the input string.
            </summary>
            <param name="input">
            The string to url decode.
            </param>
            <returns>
            The url decoded string.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.UrlEncode(System.String)">
            <summary>
            Url encode the input string.
            </summary>
            <param name="input">
            The string to url encode.
            </param>
            <returns>
            The url encoded string.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.ToString(System.IO.Stream)">
            <summary>
            Converts stream to string.
            </summary>
            <param name="stream">
            The stream.
            </param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.BaseUrl(System.String)">
            <summary>
            Sets the base url.
            </summary>
            <param name="url">
            The base url.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetBaseUrl">
            <summary>
            Gets the base url.
            </summary>
            <returns>
            The base url.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.ResourcePath(System.String)">
            <summary>
            Sets the resource path.
            </summary>
            <param name="resourcePath">
            The resource path.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetResourcePath">
            <summary>
            Gets the resource path.
            </summary>
            <returns>
            The resource path.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.Method(System.String)">
            <summary>
            Sets the http method.
            </summary>
            <param name="method">
            The method.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetMethod">
            <summary>
            Gets the http method.
            </summary>
            <returns>
            The http method.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.HttpWebRequestFactory(FluentHttp.FluentHttpWebRequestFactoryDelegate)">
            <summary>
            Sets the http web request factory.
            </summary>
            <param name="httpWebRequestFactory">
            The http web request factory.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetHttpWebRequestFactory">
            <summary>
            Gets the http web request factory.
            </summary>
            <returns>
            Func method for creating HttpWebRequest.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.Headers(System.Action{FluentHttp.FluentHttpHeaders})">
            <summary>
            Access http headers.
            </summary>
            <param name="headers">
            The headers.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetHeaders">
            <summary>
            Gets the http headers.
            </summary>
            <returns>
            The http headers.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.QueryStrings(System.Action{FluentHttp.FluentQueryStrings})">
            <summary>
            Access query strings.
            </summary>
            <param name="queryStrings">
            The query strings.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetQueryStrings">
            <summary>
            Gets the query strings.
            </summary>
            <returns>
            The query strings.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.AuthenticateUsing(FluentHttp.IFluentAuthenticator)">
            <summary>
            Sets the authenticator.
            </summary>
            <param name="authenticator">
            The authenticator.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.AuthenticateUsing(FluentHttp.FluentHttpAuthenticatorDelegate)">
            <summary>
            Sets the authenticator.
            </summary>
            <param name="authenticator">
            The authenticator.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetAuthenticator">
            <summary>
            Gets the authenticator.
            </summary>
            <returns>
            The authenticator.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.Proxy(System.Net.IWebProxy)">
            <summary>
            Sets the proxy.
            </summary>
            <param name="proxy">
            The proxy.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetProxy">
            <summary>
            Gets the proxy.
            </summary>
            <returns>
            The proxy.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.Credentials(System.Net.ICredentials)">
            <summary>
            Sets the credentails.
            </summary>
            <param name="credentials">
            The credentails.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetCredentials">
            <summary>
            Gets the credentials.
            </summary>
            <returns>
            The credentials.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.OnResponseHeadersReceived(System.EventHandler{FluentHttp.ResponseHeadersReceivedEventArgs})">
            <summary>
            Occurs when http response headers are received.
            </summary>
            <param name="onResponseHeadersReceived">
            On response headers received.
            </param>
            <returns>
            The fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.Body(System.Action{FluentHttp.FluentHttpRequestBody})">
            <summary>
            Access the request body.
            </summary>
            <param name="body">
            The request body.
            </param>
            <returns>
            Returns the Fluent http request.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.GetBody">
            <summary>
            Gets the request body.
            </summary>
            <returns>
            The resquest body.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.BuildRequestUrl">
            <summary>
            Builds the request url.
            </summary>
            <returns>
            The request url.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.OnResponseHeadersRecived(FluentHttp.ResponseHeadersReceivedEventArgs)">
            <summary>
            Notify response headers received.
            </summary>
            <param name="e">
            The event args.
            </param>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.Initialize">
            <summary>
            Initializes Fluent Http Request.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.AuthenticateIfRequried">
            <summary>
            Authenticates the <see cref="T:FluentHttp.FluentHttpRequest"/> if it has an authenticator.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpRequest.PrepareHttpWebRequest(FluentHttp.IHttpWebRequest)">
            <summary>
            Prepares http web request.
            </summary>
            <param name="httpWebRequest">
            The http web request.
            </param>
        </member>
        <member name="E:FluentHttp.FluentHttpRequest.ResponseHeadersReceived">
            <summary>
            Occurs when the response headers are received.
            </summary>
        </member>
        <member name="T:FluentHttp.FluentHttpRequestBody">
            <summary>
            Represents the fluent http request body
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequestBody._request">
            <summary>
            Fluent http request.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpRequestBody._streams">
            <summary>
            Internal collection of streams.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpRequestBody.#ctor(FluentHttp.FluentHttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentHttpRequestBody"/> class.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpRequestBody.Append(System.IO.Stream)">
            <summary>
            Appends a stream.
            </summary>
            <param name="stream">
            The stream.
            </param>
            <returns>
            The fluent http request body
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequestBody.Append(System.Byte[])">
            <summary>
            Appends a stream.
            </summary>
            <param name="data">
            The stream.
            </param>
            <returns>
            The fluent http request body.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequestBody.Append(System.String,System.Text.Encoding)">
            <summary>
            Appends the string content.
            </summary>
            <param name="contents">
            The contents.
            </param>
            <param name="encoding">
            The encoding.
            </param>
            <returns>
            The fluent http request body.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            if contents is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            if encoding is null.
            </exception>
        </member>
        <member name="M:FluentHttp.FluentHttpRequestBody.Append(System.String)">
            <summary>
            Appends string contents.
            </summary>
            <param name="contents">
            The contents.
            </param>
            <returns>
            The fluent http request body.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentHttpRequestBody.Append(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Appends the form parameters.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The fluent http request body.
            </returns>
        </member>
        <member name="P:FluentHttp.FluentHttpRequestBody.Request">
            <summary>
            Gets the <see cref="T:FluentHttp.FluentHttpRequest"/>.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpRequestBody.Stream">
            <summary>
            Gets the stream.
            </summary>
        </member>
        <member name="T:FluentHttp.FluentHttpResponse">
            <summary>
            Represents a Fluent Http Response.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpResponse._request">
            <summary>
            The fluent http request.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentHttpResponse._httpWebResponse">
            <summary>
            The http web response.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentHttpResponse"/> class.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentHttpResponse.#ctor(FluentHttp.FluentHttpRequest,FluentHttp.IHttpWebResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentHttpResponse"/> class.
            </summary>
            <param name="request">
            The fluent http web request.
            </param>
            <param name="httpWebResponse">
            The http web response.
            </param>
        </member>
        <member name="P:FluentHttp.FluentHttpResponse.Request">
            <summary>
            Gets the fluent http request.
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpResponse.HttpWebResponse">
            <summary>
            Gets the http web response..
            </summary>
        </member>
        <member name="P:FluentHttp.FluentHttpResponse.SaveStream">
            <summary>
            Gets the reponse save stream.
            </summary>
        </member>
        <member name="T:FluentHttp.FluentQueryString">
            <summary>
            Represents the query string for Fluent Http
            </summary>
        </member>
        <member name="M:FluentHttp.FluentQueryString.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentQueryString"/> class.
            </summary>
            <param name="name">
            The query string name.
            </param>
            <param name="value">
            The query string value.
            </param>
        </member>
        <member name="M:FluentHttp.FluentQueryString.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.FluentQueryString"/> class.
            </summary>
            <param name="name">
            The query string name.
            </param>
            <param name="value">
            The query string value.
            </param>
            <param name="encode">
            Indicates whether to encode the querystring name and value.
            </param>
        </member>
        <member name="T:FluentHttp.FluentQueryStrings">
            <summary>
            Collection of query strings.
            </summary>
        </member>
        <member name="F:FluentHttp.FluentQueryStrings._queryStrings">
            <summary>
            Internal query string collection.
            </summary>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.Add(FluentHttp.FluentQueryString)">
            <summary>
            Adds the specified <see cref="T:FluentHttp.FluentQueryString"/>.
            </summary>
            <param name="queryString">
            The query string.
            </param>
            <returns>
            The fluent query strings.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.Add(System.String,System.String)">
            <summary>
            Adds the query string with the specified name and value.
            </summary>
            <param name="name">
            The http query string name.
            </param>
            <param name="value">
            The http query string value.
            </param>
            <returns>
            The fluent query string.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.Add(System.String,System.String,System.Boolean)">
            <summary>
            Adds the query string with the specified name and value.
            </summary>
            <param name="name">
            The http query string name.
            </param>
            <param name="value">
            The http query string value.
            </param>
            <param name="encode">
            The encode.
            </param>
            <returns>
            The fluent query strings.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.Add(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds the query string with the sepcified name and value.
            </summary>
            <param name="parameters">
            The query strings.
            </param>
            <returns>
            The fluent query strings.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.GetQueryStringCollection">
            <summary>
            Gets the internal query string collection.
            </summary>
            <returns>
            The list of query strings.
            </returns>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:FluentHttp.FluentQueryStrings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:FluentHttp.External.HttpUtility.HtmlDecode(System.String)">
            <summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary>
            <param name="s">The HTML string to decode. </param>
            <returns>The decoded text.</returns>
        </member>
        <member name="M:FluentHttp.External.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)">
            <summary>
            Decodes an HTML-encoded string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="s">The HTML string to decode</param>
            <param name="output">The TextWriter output stream containing the decoded string. </param>
        </member>
        <member name="M:FluentHttp.External.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)">
            <summary>
            HTML-encodes a string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="s">The string to encode. </param>
            <param name="output">The TextWriter output stream containing the encoded string. </param>
        </member>
        <member name="T:FluentHttp.IFluentAuthenticator">
            <summary>
            Interface for Authenticator
            </summary>
        </member>
        <member name="M:FluentHttp.IFluentAuthenticator.Authenticate(FluentHttp.FluentHttpRequest)">
            <summary>
            Authenticate the fluent http request.
            </summary>
            <param name="fluentHttpRequest">
            The fluent http request.
            </param>
        </member>
        <member name="T:FluentHttp.ResponseHeadersReceivedEventArgs">
            <summary>
            Represents the event args for response headers received.
            </summary>
        </member>
        <member name="F:FluentHttp.ResponseHeadersReceivedEventArgs._response">
            <summary>
            The fluent http response.
            </summary>
        </member>
        <member name="F:FluentHttp.ResponseHeadersReceivedEventArgs._exception">
            <summary>
            The exception
            </summary>
        </member>
        <member name="F:FluentHttp.ResponseHeadersReceivedEventArgs._asyncState">
            <summary>
            The async state.
            </summary>
        </member>
        <member name="M:FluentHttp.ResponseHeadersReceivedEventArgs.#ctor(FluentHttp.FluentHttpResponse,System.Exception,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentHttp.ResponseHeadersReceivedEventArgs"/> class.
            </summary>
            <param name="response">
            The response.
            </param>
            <param name="asyncState">The async state</param>
        </member>
        <member name="M:FluentHttp.ResponseHeadersReceivedEventArgs.SaveResponseIn(System.IO.Stream)">
            <summary>
            Sets the response stream.
            </summary>
            <param name="stream">The stream to save reponse into.</param>
        </member>
        <member name="P:FluentHttp.ResponseHeadersReceivedEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:FluentHttp.ResponseHeadersReceivedEventArgs.AsyncState">
            <summary>
            Gets the async state.
            </summary>
        </member>
        <member name="P:FluentHttp.ResponseHeadersReceivedEventArgs.Response">
            <summary>
            Gets the fluent http response.
            </summary>
        </member>
    </members>
</doc>
